<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><!-- Generated by JAX-WS RI (https://github.com/eclipse-ee4j/metro-jax-ws). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://mcrapplication.ws/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://mcrapplication.ws/" name="MCRWebService">
<types>
<xsd:schema>
<xsd:import namespace="http://mcrapplication.ws/" schemaLocation="http://localhost:8080/MCRWebService/MCRWebService?xsd=1"/>
</xsd:schema>
</types>
<message name="partnerRetrieveAllReservations">
<part name="parameters" element="tns:partnerRetrieveAllReservations"/>
</message>
<message name="partnerRetrieveAllReservationsResponse">
<part name="parameters" element="tns:partnerRetrieveAllReservationsResponse"/>
</message>
<message name="PartnerNotFoundException">
<part name="fault" element="tns:PartnerNotFoundException"/>
</message>
<message name="partnerRetrieveReservationById">
<part name="parameters" element="tns:partnerRetrieveReservationById"/>
</message>
<message name="partnerRetrieveReservationByIdResponse">
<part name="parameters" element="tns:partnerRetrieveReservationByIdResponse"/>
</message>
<message name="ReservationNotFoundException">
<part name="fault" element="tns:ReservationNotFoundException"/>
</message>
<message name="InvalidRelationIdException">
<part name="fault" element="tns:InvalidRelationIdException"/>
</message>
<message name="partnerRetrieveAllModels">
<part name="parameters" element="tns:partnerRetrieveAllModels"/>
</message>
<message name="partnerRetrieveAllModelsResponse">
<part name="parameters" element="tns:partnerRetrieveAllModelsResponse"/>
</message>
<message name="partnerRetrieveAllOutlets">
<part name="parameters" element="tns:partnerRetrieveAllOutlets"/>
</message>
<message name="partnerRetrieveAllOutletsResponse">
<part name="parameters" element="tns:partnerRetrieveAllOutletsResponse"/>
</message>
<message name="partnerRetrieveTotalByCategory">
<part name="parameters" element="tns:partnerRetrieveTotalByCategory"/>
</message>
<message name="partnerRetrieveTotalByCategoryResponse">
<part name="parameters" element="tns:partnerRetrieveTotalByCategoryResponse"/>
</message>
<message name="CategoryNotFoundException">
<part name="fault" element="tns:CategoryNotFoundException"/>
</message>
<message name="RateNotFoundException">
<part name="fault" element="tns:RateNotFoundException"/>
</message>
<message name="partnerRetrieveAllCategories">
<part name="parameters" element="tns:partnerRetrieveAllCategories"/>
</message>
<message name="partnerRetrieveAllCategoriesResponse">
<part name="parameters" element="tns:partnerRetrieveAllCategoriesResponse"/>
</message>
<message name="partnerDoCancelReservation">
<part name="parameters" element="tns:partnerDoCancelReservation"/>
</message>
<message name="partnerDoCancelReservationResponse">
<part name="parameters" element="tns:partnerDoCancelReservationResponse"/>
</message>
<message name="partnerRetrieveOutletById">
<part name="parameters" element="tns:partnerRetrieveOutletById"/>
</message>
<message name="partnerRetrieveOutletByIdResponse">
<part name="parameters" element="tns:partnerRetrieveOutletByIdResponse"/>
</message>
<message name="OutletNotFoundException">
<part name="fault" element="tns:OutletNotFoundException"/>
</message>
<message name="partnerCreateReservation">
<part name="parameters" element="tns:partnerCreateReservation"/>
</message>
<message name="partnerCreateReservationResponse">
<part name="parameters" element="tns:partnerCreateReservationResponse"/>
</message>
<message name="partnerSearchCar">
<part name="parameters" element="tns:partnerSearchCar"/>
</message>
<message name="partnerSearchCarResponse">
<part name="parameters" element="tns:partnerSearchCarResponse"/>
</message>
<message name="partnerLogin">
<part name="parameters" element="tns:partnerLogin"/>
</message>
<message name="partnerLoginResponse">
<part name="parameters" element="tns:partnerLoginResponse"/>
</message>
<message name="InvalidLoginCredentialException">
<part name="fault" element="tns:InvalidLoginCredentialException"/>
</message>
<portType name="MCRWebService">
<operation name="partnerRetrieveAllReservations">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllReservationsRequest" message="tns:partnerRetrieveAllReservations"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllReservationsResponse" message="tns:partnerRetrieveAllReservationsResponse"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllReservations/Fault/PartnerNotFoundException"/>
</operation>
<operation name="partnerRetrieveReservationById">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveReservationByIdRequest" message="tns:partnerRetrieveReservationById"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveReservationByIdResponse" message="tns:partnerRetrieveReservationByIdResponse"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveReservationById/Fault/PartnerNotFoundException"/>
<fault message="tns:ReservationNotFoundException" name="ReservationNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveReservationById/Fault/ReservationNotFoundException"/>
<fault message="tns:InvalidRelationIdException" name="InvalidRelationIdException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveReservationById/Fault/InvalidRelationIdException"/>
</operation>
<operation name="partnerRetrieveAllModels">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllModelsRequest" message="tns:partnerRetrieveAllModels"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllModelsResponse" message="tns:partnerRetrieveAllModelsResponse"/>
</operation>
<operation name="partnerRetrieveAllOutlets">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllOutletsRequest" message="tns:partnerRetrieveAllOutlets"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllOutletsResponse" message="tns:partnerRetrieveAllOutletsResponse"/>
</operation>
<operation name="partnerRetrieveTotalByCategory">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveTotalByCategoryRequest" message="tns:partnerRetrieveTotalByCategory"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveTotalByCategoryResponse" message="tns:partnerRetrieveTotalByCategoryResponse"/>
<fault message="tns:CategoryNotFoundException" name="CategoryNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveTotalByCategory/Fault/CategoryNotFoundException"/>
<fault message="tns:RateNotFoundException" name="RateNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveTotalByCategory/Fault/RateNotFoundException"/>
</operation>
<operation name="partnerRetrieveAllCategories">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllCategoriesRequest" message="tns:partnerRetrieveAllCategories"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveAllCategoriesResponse" message="tns:partnerRetrieveAllCategoriesResponse"/>
</operation>
<operation name="partnerDoCancelReservation">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerDoCancelReservationRequest" message="tns:partnerDoCancelReservation"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerDoCancelReservationResponse" message="tns:partnerDoCancelReservationResponse"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerDoCancelReservation/Fault/PartnerNotFoundException"/>
<fault message="tns:ReservationNotFoundException" name="ReservationNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerDoCancelReservation/Fault/ReservationNotFoundException"/>
<fault message="tns:InvalidRelationIdException" name="InvalidRelationIdException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerDoCancelReservation/Fault/InvalidRelationIdException"/>
</operation>
<operation name="partnerRetrieveOutletById">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveOutletByIdRequest" message="tns:partnerRetrieveOutletById"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveOutletByIdResponse" message="tns:partnerRetrieveOutletByIdResponse"/>
<fault message="tns:OutletNotFoundException" name="OutletNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerRetrieveOutletById/Fault/OutletNotFoundException"/>
</operation>
<operation name="partnerCreateReservation">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerCreateReservationRequest" message="tns:partnerCreateReservation"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerCreateReservationResponse" message="tns:partnerCreateReservationResponse"/>
<fault message="tns:OutletNotFoundException" name="OutletNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerCreateReservation/Fault/OutletNotFoundException"/>
</operation>
<operation name="partnerSearchCar">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerSearchCarRequest" message="tns:partnerSearchCar"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerSearchCarResponse" message="tns:partnerSearchCarResponse"/>
<fault message="tns:OutletNotFoundException" name="OutletNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerSearchCar/Fault/OutletNotFoundException"/>
</operation>
<operation name="partnerLogin">
<input wsam:Action="http://mcrapplication.ws/MCRWebService/partnerLoginRequest" message="tns:partnerLogin"/>
<output wsam:Action="http://mcrapplication.ws/MCRWebService/partnerLoginResponse" message="tns:partnerLoginResponse"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerLogin/Fault/PartnerNotFoundException"/>
<fault message="tns:InvalidLoginCredentialException" name="InvalidLoginCredentialException" wsam:Action="http://mcrapplication.ws/MCRWebService/partnerLogin/Fault/InvalidLoginCredentialException"/>
</operation>
</portType>
<binding name="MCRWebServicePortBinding" type="tns:MCRWebService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="partnerRetrieveAllReservations">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerRetrieveReservationById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
<fault name="ReservationNotFoundException">
<soap:fault name="ReservationNotFoundException" use="literal"/>
</fault>
<fault name="InvalidRelationIdException">
<soap:fault name="InvalidRelationIdException" use="literal"/>
</fault>
</operation>
<operation name="partnerRetrieveAllModels">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="partnerRetrieveAllOutlets">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="partnerRetrieveTotalByCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CategoryNotFoundException">
<soap:fault name="CategoryNotFoundException" use="literal"/>
</fault>
<fault name="RateNotFoundException">
<soap:fault name="RateNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerRetrieveAllCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="partnerDoCancelReservation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
<fault name="ReservationNotFoundException">
<soap:fault name="ReservationNotFoundException" use="literal"/>
</fault>
<fault name="InvalidRelationIdException">
<soap:fault name="InvalidRelationIdException" use="literal"/>
</fault>
</operation>
<operation name="partnerRetrieveOutletById">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="OutletNotFoundException">
<soap:fault name="OutletNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerCreateReservation">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="OutletNotFoundException">
<soap:fault name="OutletNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerSearchCar">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="OutletNotFoundException">
<soap:fault name="OutletNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerLogin">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
<fault name="InvalidLoginCredentialException">
<soap:fault name="InvalidLoginCredentialException" use="literal"/>
</fault>
</operation>
</binding>
<service name="MCRWebService">
<port name="MCRWebServicePort" binding="tns:MCRWebServicePortBinding">
<soap:address location="http://localhost:8080/MCRWebService/MCRWebService"/>
</port>
</service>
</definitions>